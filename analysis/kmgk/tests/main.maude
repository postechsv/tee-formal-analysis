load ../main
load test-transient
load test-persistent
load test-data-stream
load test-generic
load test-cryptographic

mod TEST-CASES is
  pr TEST-TRANSIENT .
  pr TEST-PERSISTENT .
  pr TEST-DATA-STREAM .
  pr TEST-GENERIC .
  pr TEST-CRYPTOGRAPHIC .
endm

mod TEST-SCENARIO is
  pr SCENARIO-AUX .
  pr TEST-CASES .

  vars P TAPROG : Program .
  var RAID : Oid .
  var TAINSTID : TaInstId .
  var APPID : AppId .

  op initTestTa : Oid TaInstId Program AppId -> Configuration .
  eq initTestTa(RAID, TAINSTID, P, APPID) = 
    < TAINSTID : TrustApp | proc : none , prog : P , running : false ,
                            app-status : normal , api-call : noCall , api-return : noReturn ,
                            current-api : noApi , api-state : noState , current-params : empty , id-counter : 0 ,
                            trust-app-id : APPID ,
                            task : task({sessionId(0) , main , nil} , RAID) , task-counter : 0 , state-changed : false > .

  op scenario : Oid TaInstId Program AppId -> Configuration .
  eq scenario(RAID, TAINSTID, P, APPID) 
   = initTestTa(RAID, TAINSTID, P, APPID) initTrustedOS(TAINSTID, APPID) keys .

endm

--- rew scenario(testTransientTA) .
rew scenario(kmRa, kmTa, testPersistentTA, KEYMASTER) .
--- rew scenario(testDataStreamTA) .
--- rew scenario(testGenericTA) .
--- rew scenario(testCryptographicTA) .