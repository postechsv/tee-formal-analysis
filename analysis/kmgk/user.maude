fmod USER-INPUT is
  pr LIST{Password} .

  sorts UserInput InputType .

  op ForVerification : -> InputType [ctor] .
  op ForEnrollment : -> InputType [ctor] .

  op userInput : InputType List{Password} -> UserInput [ctor] .
endfm

view UserInput from TRIV to USER-INPUT is
  sort Elt to UserInput .
endv

omod KMGK-USER is
  pr LIST{UserInput} .

  class User | authenticator : Oid, authenticated : Bool, waiting : Bool,
               inputs : List{UserInput} .
endom

omod KMGK-USER-BEHAVIOR is
  pr KMGK-USER .
  pr KMGK-MSG .

  vars UI AI : Oid .
  var PWD : Password .
  var PWDL : List{Password} .
  var UIL : List{UserInput} .

  rl [enter-password-for-verification]:
    < UI : User | authenticator : AI , authenticated : false , waiting : false ,
                  inputs : userInput(ForVerification , PWD PWDL) UIL >
    =>
    < UI : User | waiting : true , inputs : UIL >
    (msg tryVerification(PWD) from UI to AI)
  .

  rl [verification-success]:
    (msg verificationSuccess from AI to UI)
    < UI : User | authenticator : AI , authenticated : false , waiting : true >
    =>
    < UI : User | authenticated : true , waiting : false >
  .

  rl [verification-fail]:
    (msg verificationFail from AI to UI)
    < UI : User | authenticator : AI , authenticated : false , waiting : true >
    =>
    < UI : User | waiting : false >
  .

  rl [enter-password-for-enrollment]:
    < UI : User | authenticator : AI , authenticated : true , waiting : false ,
                  inputs : userInput(ForEnrollment , PWD PWDL) UIL >
    =>
    < UI : User | waiting : true , inputs : UIL >
    (msg tryEnrollment(PWD) from UI to AI)
  .

  rl [enrollment-success]:
    (msg enrollmentSuccess from AI to UI)
    < UI : User | authenticator : AI , waiting : true >
    =>
    < UI : User | waiting : false >
  .

  rl [enrollment-fail]:
    (msg enrollmentFail from AI to UI)
    < UI : User | authenticator : AI , waiting : true >
    =>
    < UI : User | waiting : false >
  .

endom