load aux

mod BASE-SCENARIO is
  pr SCENARIO-AUX .
  pr SCENARIO-TOPICS .

  vars RAPROG TAPROG : Program .
  var THREAT : Configuration .
  var BI : Oid .

--- Two subscribers (sub1, sub2), two publishers (pub1, pub2) participate.
--- One broker with two topics (topic1, topic2) participate.
--- sub1 subscribes to a single topic, while sub2 subscribes to all topcis.
--- pub1 sends a single message, while pub2 sends two.

  op clients : -> List{SubId} .
  eq clients = {pub(1)} {pub(2)} {sub(1)} {sub(2)} .

  op initBroker : Program Oid -> Configuration .
  eq initBroker(RAPROG, TAPROG, BI) = 
  < BI : Broker | in-buffer : nil, out-buffer : nil, re-enc-queue : nil,
                  subscriptions : (topic(1) |-> {sub(1)} {sub(2)}, topic(2) |-> {sub(2)}) ,
                  infra : {initRa(RAPROG)} | {initTa(TAPROG) initTrustedOS(clients) shareKeys(clients)},
                  is-running : false, counter : 0 > .

  op scenario : Program Program Configuration -> Configuration .
  eq scenario(RAPROG, TAPROG, THREAT) 
   = initPub(1, 1, topic(1), bk(1)) initSub(1, bk(1)) 
     initPub(2, 2, topic(2), bk(1)) initSub(2, bk(1))
     initBroker(RAPROG, TAPROG, bk(1)) THREAT .

endm
